import java.util.*;

public class Oracle {
	public static void foresee(PlanetWars pw) {
		Comparator<Fleet> comparator = new Comparator<Fleet>()
{public int compare(Fleet f1, Fleet f2){return f1.turnsRemaining-f2.turnsRemaining;}};
		for (Planet p : pw.planets)
			Collections.sort(p.incoming,comparator);
	}

	public static void protect(PlanetWars pw) {
		//find all attacked planets
		//List<Planet> battlefields = new ArrayList<Planet>();
		for (Planet p : pw.planets) {
			if (p.owner == 1)
			if (p.incoming.size() > 0)
				protect(pw, p);
		}
	}
	
	public static void protect(PlanetWars pw, Planet p) {
		int strength = p.numShips;
		int time = 0;
		int owner = 1;
		for (Fleet f : p.incoming) {
			strength += p.growthRate*(f.turnsRemaining-time)*(owner==1?1:-1);
			strength += f.numShips*(f.owner==1?1:-1);
			time = f.turnsRemaining;
			MyBot.log("planet str = "+strength);
			if ( (strength < 0)&&(owner==1) ) {owner = 2; callReinforcements(pw,p,time,strength); return;}
			else if (strength > 0) owner = 1;
		}
	}
	
	public static void callReinforcements(PlanetWars pw, Planet p, int eta, int str) {
		Planet source = null;
		for (Planet p2 : pw.MyClosestPlanets(p))
			if ( (p != p2)&&(p2.numShips >= str)&&(PlanetWars.Distance(p,p2) <= eta) ) {
				source = p2;
				MyBot.log("reinforcement source found");
				break;
			}
		if (source == null) return;
		pw.IssueOrder(source,p,str);
	}
	

}
